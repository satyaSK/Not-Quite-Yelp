version: '3'
services: 
    mongo-server:
        container_name: mongo-server-v1
        image: mongo:latest
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: hunter2
            MONGO_INITDB_DATABASE: yelp-db
        ports: 
            - 27017:27017
        volumes:
            - ./db:/docker-entrypoint-initdb.d
            - mongo-volume:/data/db
            #if using named volumes, you have to declare them below
    
    api:
        container_name: node-server
        restart: always
        environment:
            REDIS_HOST: redis
            REDIS_PORT: 6379
            MONGO_HOST: mongo-server
            MONGO_PORT: 27017
            MONGO_USER: yelpUser
            MONGO_PASSWORD: yelpPwd
            MONGO_DB_NAME: yelp-db
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - 3000:3000
        depends_on:
            - mongo-server
    redis:
        image: redis:latest
        restart: always
volumes: 
    mongo-volume:


        # creates default network


# Tips:
# Keep restart On for all the containers
# Define all env variables for the API server in the deployment file -- solved the problem of API container not connecting to MongoDB container
# Use the docker dashboard logs to make sure the MongoDB server has started before the NodeJS server